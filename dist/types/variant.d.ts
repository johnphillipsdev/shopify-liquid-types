import { IImage } from "./image";
import { IMedia } from "./media";
import { IProduct } from "./product";
import { IProductOptionValue } from "./productOptionValue";
import { IQuantityPriceBreak } from "./quantityPriceBreak";
import { IQuantityRule } from "./quantityRule";
import { ISellingPlanAllocation } from "./sellingPlanAllocation";
import { IStoreAvailability } from "./storeAvailability";
import { IUnitPriceMeasurement } from "./unitPriceMeasurement";
export interface IVariant {
    available: boolean;
    barcode: string;
    compare_at_price: number;
    featured_image: IImage;
    featured_media: IMedia;
    id: number;
    image: IImage;
    incoming: boolean;
    inventory_management: string;
    inventory_policy: "deny" | "continue";
    inventory_quantity: number;
    matched: boolean;
    metafields: any;
    next_incoming_date: string;
    options: IProductOptionValue[];
    price: number;
    product: IProduct;
    quantity_price_breaks: IQuantityPriceBreak[];
    quantity_price_breaks_configured: boolean;
    quantity_rule: IQuantityRule;
    requires_selling_plan: boolean;
    requires_shipping: boolean;
    selected: boolean;
    selected_selling_plan_allocation: ISellingPlanAllocation;
    selling_plan_allocations: ISellingPlanAllocation[];
    sku: string;
    store_availabilities: IStoreAvailability[];
    taxable: boolean;
    title: string;
    unit_price: number;
    unit_price_measurement: IUnitPriceMeasurement;
    url: string;
    weight: number;
    weight_in_unit: number;
    weight_unit: string;
}
//# sourceMappingURL=variant.d.ts.map