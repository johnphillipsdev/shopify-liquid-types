import { IDiscountAllocation } from "./discountAllocation";
import { IFulfillment } from "./fulfillment";
import { IImage } from "./image";
import { IProduct } from "./product";
import { ISellingPlanAllocation } from "./sellingPlanAllocation";
import { ISortOption } from "./sortOption";
import { ITaxLine } from "./taxLine";
import { IUnitPriceMeasurement } from "./unitPriceMeasurement";

export interface ILineItem {
  id: number;
  properties: any;
  quantity: number;
  variant_id: number;
  key: string;
  title: string;
  price: number;
  original_price: number;
  presentment_price: number;
  discounted_price: number;
  line_price: number;
  original_line_price: number;
  total_discount: number;
  discounts: IDiscountAllocation[];
  sku: string;
  grams: number;
  vendor: string;
  taxable: boolean;
  product_id: number;
  product_has_only_default_variant: boolean;
  gift_card: boolean;
  final_price: number;
  final_line_price: number;
  url: string;
  featured_image: IImage;
  image: string;
  handle: string;
  requires_shipping: boolean;
  product_type: string;
  product_title: string;
  product_description: string;
  variant_title: string;
  variant_options: string[];
  options_with_values: ISortOption[];
  line_level_discount_allocations: IDiscountAllocation[];
  line_level_total_discount: number;
  quantity_rule: {
    min: number;
    max: number | null;
    increment: number;
  };
  has_components: boolean;
  fulfillment?: IFulfillment;
  fulfillment_service?: string;
  item_components?: ILineItem[];
  message?: string;
  options?: string[];
  product?: IProduct;
  selling_plan_allocation?: ISellingPlanAllocation;
  successfully_fulfilled_quantity?: number;
  tax_lines?: ITaxLine[];
  unit_price?: number;
  unit_price_measurement?: IUnitPriceMeasurement;
}
